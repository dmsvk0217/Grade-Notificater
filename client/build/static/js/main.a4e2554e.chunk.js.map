{"version":3,"sources":["consts.js","config.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","msgAccountInvaild","msgAccountVaild","msgPhoneVaild","msgPhoneInvaild","msgIdVaild","msgIdInvaild","msgServerError","msgSubmitFail","msgSubmitSuccess","msgIdDupError","msgAccountInvalidError","msgPhoneDupError","serverURL","require","ContentDoneCheck","React","createElement","className","CiCircleCheck","Loader","width","height","viewBox","fill","xmlns","d","stroke","App","id","setId","useState","password","setPassword","phone","setPhone","idError","setIdError","accountError","setAccountError","phoneError","setPhoneError","submitError","setSubmitError","checkedID","setCheckedID","checkedAccount","setCheckedAccount","checkedPhone","setCheckedPhone","loadingId","setLoadingId","buttonContentId","setButtonContentId","loadingAccount","setLoadingAccount","buttonContentAccount","setButtonContentAccount","loadingPhone","setLoadingPhone","buttonContentPhone","setButtonContentPhone","loadingSubmit","setLoadingSubmit","buttonContentSubmit","setButtonContentSubmit","modalIsOpen","setModalIsOpen","closeModal","window","location","reload","Modal","isOpen","onRequestClose","style","overlay","backgroundColor","content","paddingBottom","color","left","right","top","bottom","GiPartyPopper","size","onClick","type","value","placeholder","onChange","e","target","disabled","async","console","log","response","axios","post","concat","data","result","status","error","pw","test","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a4e2554e.chunk.js","sourcesContent":["const msgAccountInvaild = \"Incorrect Account\";\nconst msgAccountVaild = \"Correct Account\";\nconst msgPhoneVaild = \"Vaild Phone\";\nconst msgPhoneInvaild = \"Invaild Phone\";\nconst msgIdVaild = \"Vaild Id\";\nconst msgIdInvaild = \"Invaild Id\";\nconst msgSubmitFail = \"Submit Fail\";\nconst msgSubmitSuccess = \"Submit Success\";\nconst msgServerError = \"Internal Server Error\";\n\nconst msgIdDupError = \"*이미 등록된 아이디 입니다.\";\nconst msgAccountInvalidError = \"*계정이 유효하지 않습니다\";\nconst msgPhoneDupError = \"*이미 등록된 전화번호 입니다.\";\n\nmodule.exports = {\n  msgAccountInvaild,\n  msgAccountVaild,\n  msgPhoneVaild,\n  msgPhoneInvaild,\n  msgIdVaild,\n  msgIdInvaild,\n  msgServerError,\n  msgSubmitFail,\n  msgSubmitSuccess,\n  msgIdDupError,\n  msgAccountInvalidError,\n  msgPhoneDupError,\n};\n","const serverURL =\n  process.env.NODE_ENV === \"production\"\n    ? \"http://ec2-43-200-184-150.ap-northeast-2.compute.amazonaws.com:4000/\"\n    : \"http://localhost:4000/\";\n\nmodule.exports = serverURL;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { CiCircleCheck } from \"react-icons/ci\";\nimport { GiPartyPopper } from \"react-icons/gi\";\nimport \"./App.css\";\nimport Modal from \"react-modal\";\nimport {\n  msgIdInvaild,\n  msgIdDupError,\n  msgAccountInvaild,\n  msgAccountVaild,\n  msgPhoneDupError,\n  msgIdVaild,\n  msgPhoneVaild,\n  msgPhoneInvaild,\n  msgSubmitFail,\n  msgSubmitSuccess,\n} from \"./consts.js\";\n\nconst serverURL = require(\"./config.js\");\n\nconst ContentDoneCheck = (\n  <div className=\"checked-button\">\n    <p className=\"checked-text\">확인됨</p>\n    <CiCircleCheck className=\"checked-icon\" />\n  </div>\n);\n\nconst Loader = (\n  <svg\n    width=\"13\"\n    className=\"spinner\"\n    height=\"13\"\n    viewBox=\"0 0 13 14\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M4.38798 12.616C3.36313 12.2306 2.46328 11.5721 1.78592 10.7118C1.10856 9.85153 0.679515 8.82231 0.545268 7.73564C0.411022 6.64897 0.576691 5.54628 1.02433 4.54704C1.47197 3.54779 2.1845 2.69009 3.08475 2.06684C3.98499 1.4436 5.03862 1.07858 6.13148 1.01133C7.22435 0.944078 8.31478 1.17716 9.28464 1.68533C10.2545 2.19349 11.0668 2.95736 11.6336 3.89419C12.2004 4.83101 12.5 5.90507 12.5 7\"\n      stroke=\"white\"\n    />\n  </svg>\n);\n\nfunction App() {\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const [idError, setIdError] = useState(\"\");\n  const [accountError, setAccountError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const [submitError, setSubmitError] = useState(\"\");\n\n  const [checkedID, setCheckedID] = useState(false);\n  const [checkedAccount, setCheckedAccount] = useState(false);\n  const [checkedPhone, setCheckedPhone] = useState(false);\n\n  const [loadingId, setLoadingId] = useState(false);\n  const [buttonContentId, setButtonContentId] = useState(\"중복확인\");\n  const [loadingAccount, setLoadingAccount] = useState(false);\n  const [buttonContentAccount, setButtonContentAccount] = useState(\"계정확인\");\n  const [loadingPhone, setLoadingPhone] = useState(false);\n  const [buttonContentPhone, setButtonContentPhone] = useState(\"중복확인\");\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\n  const [buttonContentSubmit, setButtonContentSubmit] = useState(\"등록하기\");\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const openModal = () => {\n    setModalIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalIsOpen(false);\n    window.location.reload();\n  };\n\n  const handleIdChange = (e) => {\n    setId(e.target.value);\n    setCheckedID(false);\n    setCheckedAccount(false);\n    setLoadingId(false);\n    setButtonContentId(\"중복확인\");\n    setButtonContentAccount(\"계정확인\");\n    setLoadingAccount(false);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n    setCheckedAccount(false);\n    setLoadingAccount(false);\n    setButtonContentAccount(\"계정확인\");\n  };\n\n  const handlePhoneChange = (e) => {\n    setPhone(e.target.value);\n    setCheckedPhone(false);\n    setLoadingPhone(false);\n    setButtonContentPhone(\"중복확인\");\n  };\n\n  const handleCheckDuplicateId = async () => {\n    console.log(\"clicked id\");\n    setLoadingId(true);\n    setButtonContentId(Loader);\n    try {\n      const response = await axios.post(`${serverURL}/api/idVaildCheck`, {\n        id: id,\n      });\n      console.log(\"🚀 ~ file: App.js:35 ~ result ~ response:\", response.data);\n      const result = response.data.result;\n      if (response.status === 200 && result === msgIdVaild) {\n        setIdError(\"\");\n        setCheckedID(true);\n        setLoadingId(true);\n        setButtonContentId(ContentDoneCheck);\n      }\n    } catch (error) {\n      if (\n        error.response &&\n        error.response.status === 400 &&\n        error.response.data.error === msgIdInvaild\n      ) {\n        setIdError(msgIdDupError);\n        setLoadingId(false);\n        setButtonContentId(\"중복확인\");\n      } else {\n        setIdError(\"*알 수 없는 서버오류 발생.\");\n        setLoadingId(false);\n        console.error(\"Error fetching data:\", error);\n        setButtonContentId(\"중복확인\");\n      }\n    }\n  };\n\n  const handleCheckAccountVaildation = async () => {\n    console.log(\"clicked Account\");\n    if (id === \"\") {\n      setAccountError(\"*아이디를 입력해주세요.\");\n      return;\n    }\n    if (password === \"\") {\n      setAccountError(\"*비밀번호를 입력해주세요.\");\n      return;\n    }\n    setLoadingAccount(true);\n    setButtonContentAccount(Loader);\n    try {\n      const response = await axios.post(`${serverURL}/api/AccountVaildCheck`, {\n        id: id,\n        pw: password,\n      });\n      const result = response.data.result;\n      console.log(\n        \"🚀 ~ file: App.js:84 ~ handleCheckAccountVaildation ~ result:\",\n        result\n      );\n      if (response.status === 200 && result === msgAccountVaild) {\n        setAccountError(\"\");\n        setCheckedAccount(true);\n        setLoadingAccount(true);\n        setButtonContentAccount(ContentDoneCheck);\n      }\n    } catch (error) {\n      if (\n        error.response &&\n        error.response.status === 400 &&\n        error.response.data.error === msgAccountInvaild\n      ) {\n        setAccountError(\"*유효하지 않은 히즈넷 계정입니다.\");\n        setLoadingAccount(false);\n        setButtonContentAccount(\"계정확인\");\n      } else {\n        setAccountError(\"*알 수 없는 서버오류 발생.\");\n        console.error(\"Error fetching data:\", error);\n        setLoadingAccount(false);\n        setButtonContentAccount(\"계정확인\");\n      }\n    }\n  };\n\n  const handleCheckDuplicatePhone = async () => {\n    console.log(\"clicked phone\");\n\n    const phonePattern = /^010\\d{8}$/;\n    if (!phonePattern.test(phone)) {\n      setPhoneError(\"올바른 형식을 입력해 주세요. (ex.01012341234)\");\n      return;\n    }\n\n    setLoadingPhone(true);\n    setButtonContentPhone(Loader);\n\n    try {\n      const response = await axios.post(`${serverURL}/api/phoneVaildCheck`, {\n        phone: phone,\n      });\n      const result = response.data.result;\n      console.log(\n        \"🚀 ~ file: App.js:89 ~ handleCheckDuplicatePhone ~ result:\",\n        result\n      );\n      if (response.status === 200 && result === msgPhoneVaild) {\n        setPhoneError(\"\");\n        setCheckedPhone(true);\n        setLoadingPhone(true);\n        setButtonContentPhone(ContentDoneCheck);\n      }\n    } catch (error) {\n      if (\n        error.response &&\n        error.response.status === 400 &&\n        error.response.data.error === msgPhoneInvaild\n      ) {\n        setPhoneError(msgPhoneDupError);\n        setLoadingPhone(false);\n        setButtonContentPhone(\"중복확인\");\n      } else {\n        setPhoneError(\"*알 수 없는 서버오류 발생.\");\n        console.error(\"Error fetching data:\", error);\n        setLoadingPhone(false);\n        setButtonContentPhone(\"중복확인\");\n      }\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!checkedID || !checkedAccount || !checkedPhone) {\n      setSubmitError(\"*모든 항목이 확인되어야 합니다.\");\n      return;\n    }\n    setButtonContentSubmit(Loader);\n    setLoadingSubmit(true);\n\n    try {\n      const response = await axios.post(`${serverURL}/api/submit`, {\n        id: id,\n        pw: password,\n        phone: phone,\n      });\n      console.log(\"🚀 ~ file: App.js:181 ~ handleSubmit ~ response:\", response);\n      const result = response.data.result;\n      console.log(\"🚀 ~ file: App.js:168 ~ handleSubmit ~ result:\", result);\n      if (response.status === 200 && result === msgSubmitSuccess) {\n        setSubmitError(\"\");\n        openModal();\n        setLoadingSubmit(false);\n      }\n    } catch (error) {\n      if (\n        error.response &&\n        error.response.status === 400 &&\n        error.response.data.error === msgSubmitFail\n      ) {\n        setSubmitError(msgPhoneDupError);\n        setLoadingSubmit(false);\n      } else {\n        setSubmitError(\"*알 수 없는 서버오류 발생.\");\n        console.error(\"Error fetching data:\", error);\n        setLoadingSubmit(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div>\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          style={{\n            overlay: {\n              backgroundColor: \"gray\",\n            },\n            content: {\n              paddingBottom: \"0\",\n              color: \"black\",\n              left: \"20vw\",\n              right: \"20vw\",\n              top: \"40vh\",\n              bottom: \"43vh\",\n            },\n          }}\n        >\n          <div className=\"done-row\">\n            <GiPartyPopper className=\"done-icon\" size={25} />\n            <div className=\"done-texts\">\n              <p className=\"done-text\">축하합니다. </p>\n              <p className=\"done-text\">등록이 완료되었습니다!</p>\n            </div>\n            <GiPartyPopper className=\"done-icon\" size={25} />\n          </div>\n          <br />\n\n          <button onClick={closeModal}>닫기</button>\n        </Modal>\n      </div>\n      <form className=\"signup-form\">\n        <h2 className=\"header-text\">히즈넷 성적 알림 서비스</h2>\n        <div className=\"content-text\">\n          - 히즈넷 학사정보 성적이 업데이트되면 등록하신 전화번호로 알림문자를\n          보내드립니다.\n        </div>\n        <div className=\"content-text\">\n          - 입력된 정보는 성적알림 외의 용도로 사용되지 않습니다.\n        </div>\n        <br />\n        <div className=\"input-container\">\n          <div className=\"input-container\">\n            {/* <label htmlFor=\"id\">히즈넷 아이디</label> */}\n            <div className=\"input-row\">\n              <input\n                type=\"text\"\n                id=\"id\"\n                value={id}\n                placeholder=\"히즈넷 아이디\"\n                onChange={handleIdChange}\n              />\n              <button\n                type=\"button\"\n                className=\"input-button\"\n                disabled={loadingId}\n                onClick={handleCheckDuplicateId}\n              >\n                {buttonContentId}\n              </button>\n            </div>\n            {idError && <div className=\"error-message\">{idError}</div>}\n          </div>\n\n          <div className=\"input-container\">\n            {/* <label htmlFor=\"password\">히즈넷 비밀번호</label> */}\n            <div className=\"input-row\">\n              <input\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                placeholder=\"히즈넷 비밀번호\"\n                onChange={handlePasswordChange}\n              />\n              <button\n                type=\"button\"\n                className=\"input-button\"\n                disabled={loadingAccount}\n                onClick={handleCheckAccountVaildation}\n              >\n                {buttonContentAccount}\n              </button>\n            </div>\n            {accountError && (\n              <div className=\"error-message\">{accountError}</div>\n            )}\n          </div>\n\n          {/* <label htmlFor=\"phone\">알림받으실 전화번호</label> */}\n          <div className=\"input-row\">\n            <input\n              type=\"text\"\n              id=\"phone\"\n              value={phone}\n              placeholder=\"알림받을 전화번호(-없이표기)\"\n              onChange={handlePhoneChange}\n            />\n            <button\n              type=\"button\"\n              className=\"input-button\"\n              disabled={loadingPhone}\n              onClick={handleCheckDuplicatePhone}\n            >\n              {buttonContentPhone}\n            </button>\n          </div>\n          {phoneError && <div className=\"error-message\">{phoneError}</div>}\n        </div>\n\n        <button type=\"button\" disabled={loadingSubmit} onClick={handleSubmit}>\n          {buttonContentSubmit}\n        </button>\n        {submitError && <div className=\"error-message\">{submitError}</div>}\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}